name: ApexFood CI/CD - Main Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AZURE_RESOURCE_GROUP_NAME: rg-apexfood-dev
  AZURE_LOCATION: "Brazil South"
  AZURE_WEBAPP_NAME: app-apexfood-dev

jobs:
  # ==================================================================
  # JOB 1: Apenas constrói, (futuramente) roda testes de unidade e publica o artefato.
  # ==================================================================
  build_and_publish:  
    name: Build and Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    # (Quando tivermos testes de unidade, eles serão executados aqui)
    # - name: Run Unit Tests
    #   run: dotnet test --no-build --filter "TestCategory!=Integration"

    - name: Publish application
      run: dotnet publish ApexFood.Api/ApexFood.Api.csproj --configuration Release --output ./publish

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: apexfood-api-package
        path: ./publish

  # ==================================================================
  # JOB 2: Novo job dedicado para rodar os testes de integração.
  # ==================================================================
  integration_test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: build_and_publish # Depende do sucesso do job anterior

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Run Integration Tests
      run: dotnet test ApexFood.Api.IntegrationTests/ApexFood.Api.IntegrationTests.csproj --configuration Release --verbosity normal

  # ==================================================================
  # JOB 3: O deploy agora depende do sucesso dos testes de integração.
  # ==================================================================
  deploy:
    name: Provision and Deploy to Azure
    runs-on: ubuntu-latest
    needs: integration_test # <-- MUDANÇA IMPORTANTE
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: apexfood-api-package
        path: ./publish
        
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore Solution Dependencies
      run: dotnet restore     

    - name: 'Pre-flight Secrets Check'
      run: |
        if [ -z "${{ secrets.SQL_ADMIN_PASSWORD }}" ]; then echo "ERRO: O segredo SQL_ADMIN_PASSWORD está faltando ou vazio."; exit 1; fi
        if [ -z "${{ secrets.AD_ADMIN_LOGIN }}" ]; then echo "ERRO: O segredo AD_ADMIN_LOGIN está faltando ou vazio."; exit 1; fi
        if [ -z "${{ secrets.AD_ADMIN_SID }}" ]; then echo "ERRO: O segredo AD_ADMIN_SID está faltando ou vazio."; exit 1; fi
        echo "Verificação de segredos concluída com sucesso."

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Bicep via Azure CLI
      run: |
        az deployment group create \
          --name "deploy-run-${{ github.run_number }}" \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
          --template-file ./infrastructure/main.bicep \
          --parameters \
            projectName='${{ env.AZURE_WEBAPP_NAME }}' \
            sqlAdminPassword='${{ secrets.SQL_ADMIN_PASSWORD }}' \
            adAdminLogin='${{ secrets.AD_ADMIN_LOGIN }}' \
            adAdminSid='${{ secrets.AD_ADMIN_SID }}'

    - name: Update Database
      env:
        ConnectionStrings__DefaultConnection: ${{ secrets.AZURE_DB_CONNECTION_STRING }}
      run: |
        dotnet tool restore
        dotnet ef database drop --project ApexFood.Persistence --startup-project ApexFood.Api --force
        dotnet ef database update --project ApexFood.Persistence --startup-project ApexFood.Api

    - name: Deploy to App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: './publish'
